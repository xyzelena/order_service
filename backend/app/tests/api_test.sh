#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

API_BASE="http://localhost:8081/api/v1"
TEST_ORDER_ID="b563feb7b2b84b6test"

echo -e "${BLUE}üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Order Service API${NC}"
echo "=================================="
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP –æ—Ç–≤–µ—Ç–∞
check_response() {
    local url=$1
    local expected_status=${2:-200}
    local description=$3
    
    echo -e "${YELLOW}üì° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $description${NC}"
    echo "URL: $url"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    response=$(curl -s -w "\n%{http_code}" "$url")
    http_code=$(echo "$response" | tail -n1)
    json_body=$(echo "$response" | head -n -1)
    
    echo "HTTP Status: $http_code"
    
    if [ "$http_code" -eq "$expected_status" ]; then
        echo -e "${GREEN}‚úÖ –°—Ç–∞—Ç—É—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π${NC}"
    else
        echo -e "${RED}‚ùå –û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å $expected_status, –ø–æ–ª—É—á–µ–Ω $http_code${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å JSON
    if echo "$json_body" | jq . > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ –û—Ç–≤–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º JSON${NC}"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
        success=$(echo "$json_body" | jq -r '.success // "null"')
        if [ "$success" = "true" ] || [ "$success" = "false" ]; then
            echo -e "${GREEN}‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è (–ø–æ–ª–µ success –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç)${NC}"
        else
            echo -e "${RED}‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ success)${NC}"
        fi
        
        # –ö—Ä–∞—Å–∏–≤–æ –≤—ã–≤–æ–¥–∏–º JSON
        echo -e "${BLUE}üìÑ –û—Ç–≤–µ—Ç:${NC}"
        echo "$json_body" | jq .
    else
        echo -e "${RED}‚ùå –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º JSON${NC}"
        echo "–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: $json_body"
    fi
    
    echo ""
    echo "----------------------------------------"
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...${NC}"
if curl -s --connect-timeout 5 "$API_BASE/health" > /dev/null; then
    echo -e "${GREEN}‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
else
    echo -e "${RED}‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8081${NC}"
    exit 1
fi
echo ""

# –¢–µ—Å—Ç 1: Health Check
check_response "$API_BASE/health" 200 "Health Check"

# –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø–æ ID
check_response "$API_BASE/orders/$TEST_ORDER_ID" 200 "–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø–æ ID"

# –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∑–∞–∫–∞–∑–∞
check_response "$API_BASE/orders/nonexistent_order" 404 "–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∑–∞–∫–∞–∑–∞"

# –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤
check_response "$API_BASE/orders?limit=5" 200 "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤"

# –¢–µ—Å—Ç 5: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∞
check_response "$API_BASE/cache/stats" 200 "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∞"

# –¢–µ—Å—Ç 6: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π endpoint
check_response "$API_BASE/invalid_endpoint" 404 "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π endpoint"

# –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
echo -e "${YELLOW}‚ö° –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (10 –∑–∞–ø—Ä–æ—Å–æ–≤)${NC}"
echo "========================================"

total_time=0
success_count=0

for i in {1..10}; do
    start_time=$(date +%s%N)
    
    response=$(curl -s -w "\n%{http_code}" "$API_BASE/orders/$TEST_ORDER_ID")
    http_code=$(echo "$response" | tail -n1)
    
    end_time=$(date +%s%N)
    duration=$((($end_time - $start_time) / 1000000)) # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
    
    total_time=$(($total_time + $duration))
    
    if [ "$http_code" -eq "200" ]; then
        success_count=$(($success_count + 1))
        echo -e "–ó–∞–ø—Ä–æ—Å $i: ${GREEN}$duration –º—Å${NC}"
    else
        echo -e "–ó–∞–ø—Ä–æ—Å $i: ${RED}–û–®–ò–ë–ö–ê (HTTP $http_code)${NC}"
    fi
done

if [ $success_count -gt 0 ]; then
    avg_time=$(($total_time / $success_count))
    echo ""
    echo -e "${BLUE}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:${NC}"
    echo "–£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: $success_count/10"
    echo "–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: $avg_time –º—Å"
    echo "–û–±—â–µ–µ –≤—Ä–µ–º—è: $total_time –º—Å"
fi

echo ""
echo -e "${GREEN}üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo ""
echo -e "${BLUE}üìã –ö—Ä–∞—Ç–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞ –ø–æ API:${NC}"
echo "‚Ä¢ GET /api/v1/orders/{order_uid} - –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –ø–æ ID"
echo "‚Ä¢ GET /api/v1/orders?limit=N - –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤"
echo "‚Ä¢ GET /api/v1/cache/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∞"
echo "‚Ä¢ GET /api/v1/health - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞"
echo ""
echo -e "${BLUE}üåê Frontend –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:${NC}"
echo "‚Ä¢ http://localhost:3000 - –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω)"
echo ""
echo -e "${BLUE}üîß Kafka UI:${NC}"
echo "‚Ä¢ http://localhost:8080 - –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Kafka (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω)"
